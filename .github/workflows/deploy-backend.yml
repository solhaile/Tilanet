name: Deploy Backend → Staging

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'startup.sh'

env:
  NODE_VERSION: '20.x'

jobs:
  deploy-staging:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the code
      - uses: actions/checkout@v4

      # 2. Install Node.js (cache npm)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: backend/package-lock.json

      # 3. Install, test, lint, build—and copy startup.sh into dist/
      - name: Install, Test & Build
        run: |
          cd backend
          npm ci
          npm test
          npm run lint
          npm run build

          # Copy everything needed for Azure deployment
          cp package.json dist
          cp package-lock.json dist
        
          # Ensure Azure runs npm install by adding post deployment script
          echo '#!/bin/sh' > dist/deploy.sh
          echo 'npm install --production' >> dist/deploy.sh
          chmod +x dist/deploy.sh

      # 4. Push dist/ (now containing your built code + startup.sh) to the staging slot
      - name: Deploy to Azure App Service (staging slot)
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          slot-name: staging
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}
          package: backend/dist
